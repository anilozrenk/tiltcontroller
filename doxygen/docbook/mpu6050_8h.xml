<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mpu6050_8h" xml:lang="en-US">
<title>Inc/mpu6050.h File Reference</title>
<indexterm><primary>Inc/mpu6050.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdint.h&gt;
#include &quot;main.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_m_p_u6050__t">MPU6050_t</link></para>

<para>MPU6050 structure. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct_kalman__t">Kalman_t</link></para>

<para>Kalman structure. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>uint8_t <link linkend="_mpu6050_8h_1aafa9c78f858c561cc64af97bbb57e393">MPU6050_Init</link> (I2C_HandleTypeDef *I2Cx)</para>
</listitem>
            <listitem><para>void <link linkend="_mpu6050_8h_1a5476709bd12c603fc74bae86f72db0d5">MPU6050_Read_Accel</link> (I2C_HandleTypeDef *I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> *DataStruct)</para>
</listitem>
            <listitem><para>void <link linkend="_mpu6050_8h_1a2329322c6cb1c7e939e00bd43db44b4b">MPU6050_Read_Gyro</link> (I2C_HandleTypeDef *I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> *DataStruct)</para>
</listitem>
            <listitem><para>void <link linkend="_mpu6050_8h_1a83eafd157dd3df2c9add558904ed62e0">MPU6050_Read_Temp</link> (I2C_HandleTypeDef *I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> *DataStruct)</para>
</listitem>
            <listitem><para>void <link linkend="_mpu6050_8h_1aabd50bac1ecae86151549a1a8a678382">MPU6050_Read_All</link> (I2C_HandleTypeDef *I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> *DataStruct)</para>
</listitem>
            <listitem><para><anchor xml:id="_mpu6050_8h_1ae076945741048d0c5e3dbfeabc27f5e2"/>double <emphasis role="strong">Kalman_getAngle</emphasis> (<link linkend="_struct_kalman__t">Kalman_t</link> *Kalman, double newAngle, double newRate, double dt)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><formalpara><title>Date</title>

<para>11/13/2019 </para>
</formalpara>
<formalpara><title>Author</title>

<para>Bulanov Konstantin </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_mpu6050_8h_1aafa9c78f858c561cc64af97bbb57e393"/><section>
    <title>MPU6050_Init()</title>
<indexterm><primary>MPU6050_Init</primary><secondary>mpu6050.h</secondary></indexterm>
<indexterm><primary>mpu6050.h</primary><secondary>MPU6050_Init</secondary></indexterm>
<para><computeroutput>uint8_t MPU6050_Init (I2C_HandleTypeDef * I2Cx)</computeroutput></para>
<para>check device ID WHO_AM_I</para>

<para>power management register 0X6B we should write all 0&apos;s to wake the sensor up</para>

<para>Set DATA RATE of 1KHz by writing SMPLRT_DIV register</para>
</section>
<anchor xml:id="_mpu6050_8h_1a5476709bd12c603fc74bae86f72db0d5"/><section>
    <title>MPU6050_Read_Accel()</title>
<indexterm><primary>MPU6050_Read_Accel</primary><secondary>mpu6050.h</secondary></indexterm>
<indexterm><primary>mpu6050.h</primary><secondary>MPU6050_Read_Accel</secondary></indexterm>
<para><computeroutput>void MPU6050_Read_Accel (I2C_HandleTypeDef * I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> * DataStruct)</computeroutput></para>
<para>Read 6 BYTES of data starting from ACCEL_XOUT_H register</para>

<para>convert the RAW values into acceleration in &apos;g&apos; we have to divide according to the Full scale value set in FS_SEL have configured FS_SEL = 0. So I am dividing by 16384.0 for more details check ACCEL_CONFIG Register</para>
</section>
<anchor xml:id="_mpu6050_8h_1aabd50bac1ecae86151549a1a8a678382"/><section>
    <title>MPU6050_Read_All()</title>
<indexterm><primary>MPU6050_Read_All</primary><secondary>mpu6050.h</secondary></indexterm>
<indexterm><primary>mpu6050.h</primary><secondary>MPU6050_Read_All</secondary></indexterm>
<para><computeroutput>void MPU6050_Read_All (I2C_HandleTypeDef * I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> * DataStruct)</computeroutput></para>
<para>Read 14 BYTES of data starting from ACCEL_XOUT_H register</para>

<para>Kalman angle solve</para>
</section>
<anchor xml:id="_mpu6050_8h_1a2329322c6cb1c7e939e00bd43db44b4b"/><section>
    <title>MPU6050_Read_Gyro()</title>
<indexterm><primary>MPU6050_Read_Gyro</primary><secondary>mpu6050.h</secondary></indexterm>
<indexterm><primary>mpu6050.h</primary><secondary>MPU6050_Read_Gyro</secondary></indexterm>
<para><computeroutput>void MPU6050_Read_Gyro (I2C_HandleTypeDef * I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> * DataStruct)</computeroutput></para>
<para>Read 6 BYTES of data starting from GYRO_XOUT_H register</para>

<para>convert the RAW values into dps (ï¿½/s) we have to divide according to the Full scale value set in FS_SEL I have configured FS_SEL = 0. So I am dividing by 131.0 for more details check GYRO_CONFIG Register</para>
</section>
<anchor xml:id="_mpu6050_8h_1a83eafd157dd3df2c9add558904ed62e0"/><section>
    <title>MPU6050_Read_Temp()</title>
<indexterm><primary>MPU6050_Read_Temp</primary><secondary>mpu6050.h</secondary></indexterm>
<indexterm><primary>mpu6050.h</primary><secondary>MPU6050_Read_Temp</secondary></indexterm>
<para><computeroutput>void MPU6050_Read_Temp (I2C_HandleTypeDef * I2Cx, <link linkend="_struct_m_p_u6050__t">MPU6050_t</link> * DataStruct)</computeroutput></para>
<para>Read 2 BYTES of data starting from TEMP_OUT_H_REG register</para>
</section>
</section>
</section>
